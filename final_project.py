# -*- coding: utf-8 -*-
"""final_project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Cvq6yTKr2E1BWYJ5SyIWyZuYrvfgS8Nw
"""

import streamlit as st
import tensorflow as tf
import cv2
from PIL import Image, ImageOps
import numpy as np

@st.cache_resource
def load_model():
    try:
        model = tf.keras.models.load_model('animals_classifier.hdf5')
        st.success("Model loaded successfully!")
    except Exception as e:
        st.error(f"Error loading model: {e}")
        model = None
    return model

model = load_model()

st.write("""
# Cognitively Advanced Animals Prediction
""")

file = st.file_uploader("Choose animal photo from your computer to be predicted (Example: elephants, crows, rats, and bears)", type=["jpg", "png"])

def import_and_predict(image_data, model):
    try:
        size = (224, 224)  # Ensure this size matches your model's expected input size
        image = ImageOps.fit(image_data, size, Image.LANCZOS)
        img = np.asarray(image)
        img_reshape = img[np.newaxis, ...]  # Add batch dimension
        prediction = model.predict(img_reshape)
        return prediction
    except Exception as e:
        st.error(f"Error during prediction: {e}")
        return None

if file is None:
    st.text("Please upload an image file")
else:
    try:
        image = Image.open(file)
        st.image(image, use_column_width=True)
        if model is not None:
            prediction = import_and_predict(image, model)
            if prediction is not None:
                class_names = ['bears', 'crows', 'elephants', 'rats']
                string = "Predicted Cognitive Animal : " + class_names[np.argmax(prediction)]
                st.success(string)
            else:
                st.error("Prediction failed. Please check the input and try again.")
        else:
            st.error("Model is not loaded. Please check the error messages above.")
    except Exception as e:
        st.error(f"Error processing the image: {e}")
